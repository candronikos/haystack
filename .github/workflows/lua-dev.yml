name: Release Lua module for all platforms

on:
  push:
    branches:
      - actions
  pull_request:
    branches:
      - actions

jobs:
  release:
    name: Release - ${{ matrix.lua_version.version }} - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: x86_64-unknown-linux-gnu
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            target-prefix: lib
            test: true
            ext: .so
            
          # - os-name: aarch64-apple-darwin
          #   runs-on: macos-latest
          #   target: aarch64-apple-darwin
          #   target-prefix: lib
          #   test: true
          #   ext: .dylib
          #   target-ext: .so

          # - os-name: x86_64-apple-darwin
          #   runs-on: macos-latest
          #   target: x86_64-apple-darwin
          #   target-prefix: lib
          #   ext: .dylib
          #   target-ext: .so

          # - os-name: aarch64-unknown-linux-gnu
          #   runs-on: ubuntu-latest
          #   target: aarch64-unknown-linux-gnu
          #   target-prefix: lib
          #   ext: .so

          # - os-name: i686-unknown-linux-gnu
          #   runs-on: ubuntu-latest
          #   target: i686-unknown-linux-gnu
          #   target-prefix: lib
          #   ext: .so

          - os-name: x86_64-pc-windows-msvc
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .dll

          # - os-name: i686-pc-windows-msvc
          #   runs-on: windows-latest
          #   target: i686-pc-windows-msvc
          #   ext: .dll
        
        lua_version:
          - version: "5.1"
            feature: "lua51"

          - version: "5.2"
            feature: "lua52"

          - version: "5.3"
            feature: "lua53"

          - version: "5.4"
            feature: "lua54"

          # - version: "luajit-2.0"
          #   feature: "luajit"

          # - version: "luajit-2.1"
          #   feature: "luajit52"

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Extract version from Cargo.toml
      - name: Get haystack-lua version
        id: get-version
        run: |
          VERSION=$(cargo metadata -q --format-version 1 --no-deps | jq -r '.packages[] | select(.name == "haystack-lua") | .version')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      # Build project
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release --package haystack-lua --no-default-features --features ${{ matrix.lua_version.feature }}"
          strip: true

      - uses: ilammy/msvc-dev-cmd@v1
        if: matrix.platform.test == true
      
        # Set lua version
      - name: Set lua version
        uses: leafo/gh-actions-lua@v11
        if: matrix.platform.test == true
        with:
          luaVersion: ${{ matrix.lua_version.version }}

      - uses: leafo/gh-actions-luarocks@v4
        if: matrix.platform.test == true
      
      - name: Install test dependencies
        if: matrix.platform.test == true
        run: |
          luarocks install luaunit
      
      - name: List binaries in target directory
        run: |
          ls target/${{ matrix.platform.target }}/release/
        shell: bash
      
      - name: Move lua library to test directory
        run: |
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.target-prefix || '' }}haystack_lua${{ matrix.platform.ext || '' }} haystack-lua/tests/lua/haystack${{ matrix.platform.target-ext || matrix.platform.ext || '' }}
        shell: bash
      
      - name: List files in test directory
        run: |
          ls haystack-lua/tests/lua/
        shell: bash

      # Run tests
      - name: Run tests
        if: matrix.platform.test == true
        run: |
          cd haystack-lua/tests/lua
          lua test.lua
        shell: bash

      # Upload release binary
      - name: Upload release binary
        uses: actions/upload-artifact@v4
        with:
          name: haystack-lua-${{ matrix.lua_version.version }}-v${{ env.VERSION }}-${{ matrix.platform.target }}${{ matrix.platform.target-ext || matrix.platform.ext || '' }}
          path: haystack-lua/tests/lua/haystack${{ matrix.platform.target-ext || matrix.platform.ext || '' }}
          if-no-files-found: error