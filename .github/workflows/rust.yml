name: Cross-Platform Release Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  package:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, freebsd]
    runs-on: ${{ matrix.os }}

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install OpenSSL dependencies (platform-specific)
      - name: Install OpenSSL dependencies
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest)
              sudo apt update
              sudo apt install -y libssl-dev pkg-config
              ;;
            macos-latest)
              brew install openssl pkg-config
              ;;
            windows-latest)
              choco install openssl.light
              ;;
            freebsd)
              sudo pkg install -y openssl pkgconf
              ;;
          esac

      # Set environment variables for OpenSSL (platform-specific)
      - name: Set environment variables
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest)
              echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
              echo "OPENSSL_DIR=/usr" >> $GITHUB_ENV
              ;;
            macos-latest)
              echo "PKG_CONFIG_PATH=$(brew --prefix openssl)/lib/pkgconfig" >> $GITHUB_ENV
              echo "OPENSSL_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV
              ;;
            windows-latest)
              echo "OPENSSL_DIR=C:\\Program Files\\OpenSSL-Win64" >> $GITHUB_ENV
              ;;
            freebsd)
              echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" >> $GITHUB_ENV
              echo "OPENSSL_DIR=/usr/local" >> $GITHUB_ENV
              ;;
          esac

      # Set up Rust
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Install cross for cross-compilation
      - name: Install cross
        run: cargo install cross

      # Build release binaries for multiple platforms
      - name: Build release binaries
        run: |
          cross build --release --target x86_64-unknown-linux-gnu
          cross build --release --target x86_64-apple-darwin
          cross build --release --target x86_64-pc-windows-gnu
          cross build --release --target x86_64-unknown-freebsd

      # Upload the artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: haystack-release-binaries
          path: |
            target/x86_64-unknown-linux-gnu/release/haystack-client
            target/x86_64-apple-darwin/release/haystack-client
            target/x86_64-pc-windows-gnu/release/haystack-client.exe
            target/x86_64-unknown-freebsd/release/haystack-client
